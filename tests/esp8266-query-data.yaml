substitutions:
  name: aesgi
  tx_pin: GPIO4
  rx_pin: GPIO5
  device_id: "01"

esphome:
  name: ${name}

esp8266:
  board: d1_mini

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

ota:
  platform: esphome

logger:
  level: DEBUG

api:
  reboot_timeout: 0s

uart:
  id: uart_0
  baud_rate: 9600
  tx_pin: ${tx_pin}
  rx_pin: ${rx_pin}
  debug:
    direction: BOTH
    dummy_receiver: true
    after:
      delimiter: "\r"
    sequence:
      - lambda: UARTDebug::log_string(direction, bytes);

interval:
  - interval: 20s
    then:
      # Get status
      - uart.write: "#${device_id}0\r"
      - delay: 2s

      # Get device type
      - uart.write: "#${device_id}9\r"
      - delay: 2s

      # Get power limit
      - uart.write: "#${device_id}L\r"
      - delay: 2s

      # Get or execute autotest?
      # - uart.write: "#${device_id}A\r"
      # - delay: 2s

      # Get settings
      - uart.write: "#${device_id}P\r"
      - delay: 2s

      # Get errors
      - uart.write: "#${device_id}F\r"
      - delay: 2s

      # Get current limit
      - uart.write: "#${device_id}S\r"
      - delay: 2s

      # Get operation mode
      - uart.write: "#${device_id}B\r"
      - delay: 2s
